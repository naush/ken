module controls::meditate

import ui
import models::episodes
import models::podcasts
import models::lifeevents
import mobl::media

function blank(target : String) : Bool {
  return target == null || target.length == 0;
}

function toTimeDisplay(time : Num) : String {
  var timeDisplay = time.toString();
  if (time < 10) {
    timeDisplay = "0" + time;
  }
  return timeDisplay;
}

function parseTime(time : Num) : String {
  var mins = Math.floor(time / 60);
  var secs = Math.floor(time % 60);
  if (mins.toString() == "NaN"
  ||  secs.toString() == "NaN") {
    return "Unknown";
  } else {
    return toTimeDisplay(mins) + ":" + toTimeDisplay(secs);
  }
}

function prettyPlayTime(current : Num, duration : Num) : String {
  return parseTime(current) + " (" + parseTime(duration) + ")";
}

screen listen(episode : Episode) {
  var audio = Audio.load(episode.downloadUrl)
  when(Audio.canPlayMp3()) {
    customItem {
	    backButton(onclick={
	      audio.pause();
	      audio.destroy();
	      screen return;
	    })
    }
    customItem {
      label(prettyPlayTime(audio.currentTime, audio.getDuration()))
    }
    customItem {
      button("Play", onclick={ audio.play(); })
      button("Pause", onclick={ audio.pause(); })
    }
    customItem {
      link(episode.downloadUrl) { "Download MP3" }
    }
  }
}

control podcastDetail(podcast : Podcast) {
  block {
    // customItem { image(podcast.logo_url, width=120) }
    customItem { label(blank(podcast.title) ? "Unknown" : podcast.title) }
    // customItem { label(blank(podcast.description) ? "Unknown" : podcast.description) }
    customItem { link(blank(podcast.website) ? "Unknown" : podcast.website) { "Podcast Website" } }
  }
  <div style="height: 200px; overflow-y: auto; width: 270px;">
  block {
    // header("Episodes")
    list(episode in podcast.fetchEpisodes()) {
      customItem(onclick={ listen(episode); }) { label(episode.title) }
    }
  }
  </div>
}

control podcastItem(podcast : Podcast) {
  label(podcast.title)
}

function selectLifeEvent() : LifeEvent {
  return LifeEvent.all().order("date", false).one();
}

control meditate() {
  var lifeEvent = selectLifeEvent()
  var keywords = lifeEvent ? lifeEvent.keywords : ""
  var podcasts = async(fetchPodcasts(keywords.toString()))

  block(main) {
	  whenLoaded(podcasts) {
	    customMasterDetail(podcasts, podcastItem, podcastDetail)
	  }
  }
  var updateButtonImage = "resources/images/update_on.png"
  block(action) {
    <span onmousedown={
      updateButtonImage = "resources/images/update_pressed.png";
    } onmouseup={
      updateButtonImage = "resources/images/update_on.png";
    }>
    image(updateButtonImage, onclick={
      // $("#flash__Meditate").show();
      lifeEvent = selectLifeEvent();
      if (event) {
        startLoading();
        podcasts = fetchPodcasts(lifeEvent.keywords.toString());
        endLoading();
      }
    })
    </span>
  }
}

function join(front : Collection<Podcast>, back : Collection<Podcast>) : Collection<Podcast> {
  foreach (podcast in back) {
    front.add(podcast);
  }
  return front;
}
