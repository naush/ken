module ui

mixin mobl::ui::generic

// 92,152,246
style tabbarStyle customActiveTabButtonStyle {
  background-color: $baseColor;
  background-image: url("resources/images/life_on.png");
  color: #fefefe;
  position: relative;
  top: 2px;

  padding-right: 15px;
  padding-left: 15px;
  padding-top: 10px;
  padding-bottom: 10px;
  margin-left: 5px;
  line-height: 37px;
  height: 39px;
  margin-bottom: 0;
  border-top: 1px solid #444;
  border-right: 1px solid #444;
  border-left: 1px solid #444;
  -webkit-border-top-right-radius: 8px;
  -moz-border-radius-topright: 8px;
  -webkit-border-top-left-radius: 8px;
  -moz-border-radius-topleft: 8px;
}

style tabbarStyle customInActiveTabButtonStyle {
  padding-right: 15px;
  padding-left: 15px;
  padding-top: 10px;
  padding-bottom: 10px;
  margin-left: 5px;
  line-height: 39px;
  height: 39px;
  margin-bottom: 0;
  background-color: white;
  // background-image: url("resources/images/life_off.png");
  color: black;
  border-top: 1px solid #444;
  border-right: 1px solid #444;
  border-left: 1px solid #444;
  -webkit-border-top-right-radius: 8px;
  -moz-border-radius-topright: 8px;
  -webkit-border-top-left-radius: 8px;
  -moz-border-radius-topleft: 8px;
}

control customTabSet(tabs : [(String, String, Control)]) {
  var activeTabName : String = tabs.get(0)._1
  var s = ""

  block(tabbarStyle) {
    list((tabName, tabIcon, tabControl) in tabs) {
      span(onclick={ activeTabName = tabName; }, cssClass=activeTabName == tabName ? customActiveTabButtonStyle : customInActiveTabButtonStyle) {
        label(tabName)
      }
    }
  }
  list((tabName, tabIcon, tabControl) in tabs) {
    block(activeTabName == tabName ? activeTabStyle : inActiveTabStyle) {
      screenContext {
        tabControl()
      }
    }
  }
}

control rangeField(s : String, style : Style = null, min : Num = 0, max : Num = 10, start : Num = 0) {
  // var id = s + "-range-field"
  // <input type="range" databind=s value=start min=min max=max onchange={s = $("#" + id).val();} id=id class=style />
  slider@<div/>
  // label(start + "%")
  script {
    slider.slider(Dynamic(value=start, min=min, max=max, step=1, change={
        s = slider.slider("value");
        start = slider.slider("value");
      }));
  }
}

// STYLES

style $baseColor = rgb(150, 80, 0)

style title {
  padding: 10px;
  font-size: 2em;
}

style left {
  display: inline;
  font-size: 0.8em;
  margin: 0 0 10px 0;
  float: left;
}

style right {
  display: inline;
  font-size: 0.8em;
  margin: 0 0 10px 0;
  float: right;
}

style center {
  display: inline;
  font-size: 1em;
  margin: 0 0 10px 0;
  float: center;
}

style ranger {
  width: 100%;
}
// 
// style tabbarStyle {
//   text-align: left;
//   font-size: 16px;
//   z-index: 3;
//   width: 100%;
//   border-bottom: 1px solid #444;
//   margin-top: 0.3em;
//   margin-bottom: 0;
// }
// 
// style tabbarStyle inActiveTabButtonStyle {
//   padding-right: 15px;
//   padding-left: 15px;
//   padding-top: 10px;
//   padding-bottom: 10px;
//   margin-left: 5px;
//   line-height: 39px;
//   height: 39px;
//   margin-bottom: 0;
//   background-color: white;
//   color: black;
//   border-top: 1px solid #444;
//   border-right: 1px solid #444;
//   border-left: 1px solid #444;
//   -webkit-border-top-right-radius: 8px;
//   -moz-border-radius-topright: 8px;
//   -webkit-border-top-left-radius: 8px;
//   -moz-border-radius-topleft: 8px;
// }
// 
// // 92,152,246
// style tabbarStyle activeTabButtonStyle {
//   background-color: $baseColor;
//   color: #fefefe;
//   position: relative;
//   top: 2px;
// 
//   padding-right: 15px;
//   padding-left: 15px;
//   padding-top: 10px;
//   padding-bottom: 10px;
//   margin-left: 5px;
//   line-height: 37px;
//   height: 39px;
//   margin-bottom: 0;
//   border-top: 1px solid #444;
//   border-right: 1px solid #444;
//   border-left: 1px solid #444;
//   -webkit-border-top-right-radius: 8px;
//   -moz-border-radius-topright: 8px;
//   -webkit-border-top-left-radius: 8px;
//   -moz-border-radius-topleft: 8px;
// }

